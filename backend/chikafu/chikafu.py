import os
import google.generativeai as genai
from dotenv import load_dotenv

load_dotenv()
API_KEY: str = os.getenv("GEMINI_API_KEY")
genai.configure(api_key=API_KEY)

model = genai.GenerativeModel('gemini-2.5-flash')


def get_recipe(cuisine, 
               serving, 
               ingredients, 
               time, 
               budget) -> str:
    """
    Generates a recipe using the gemini API.
    The function constructs a prompt to generate a creative recipe.
    Args: 
        cuisine:, 
        serving:, 
        ingredients, 
        time, 
        budget
    """

    prompt = (f"Give me one creative recipe, cuisine:{cuisine}, serving: {serving} ingredients: {ingredients}, time {time}, budget: {budget}"
              )

    try:
        response = model.generate_content(prompt)
        text = response.text.strip()
        return text
    except Exception as e:
        raise RuntimeError(f"Gemini API Error: {e}")
    


# def parse_gemini_response(text):
#     """
#     Parses a structured Gemini text response into a dictionary.
#     Params:
#         text: (str): The raw multiline string generated by the Gemini API.
#     Returns:
#         dictionary w
#     """